# --- Persistent Volume Claims ---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
  labels:
    app: kafka
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
  labels:
    app: mongo
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
# --- Zookeeper Deployment & Service ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  labels:
    app: kafka
    component: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      component: zookeeper
  template:
    metadata:
      labels:
        app: kafka
        component: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.5.0
          ports:
            - containerPort: 2181
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "300m"
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: kafka
    component: zookeeper
spec:
  selector:
    app: kafka
    component: zookeeper
  ports:
    - port: 2181
      targetPort: 2181
---
# --- Kafka Deployment & Service ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
  labels:
    app: kafka
    component: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
      component: broker
  template:
    metadata:
      labels:
        app: kafka
        component: broker
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.5.0
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://0.0.0.0:9092
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          volumeMounts:
            - name: kafka-storage
              mountPath: /var/lib/kafka/data
          readinessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 9092
            initialDelaySeconds: 30
            periodSeconds: 20
          resources:
            requests:
              memory: "512Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "500m"
      volumes:
        - name: kafka-storage
          persistentVolumeClaim:
            claimName: kafka-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
  labels:
    app: kafka
    component: broker
spec:
  selector:
    app: kafka
    component: broker
  ports:
    - port: 9092
      targetPort: 9092
---
# --- MongoDB Deployment & Service ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  labels:
    app: mongo
    component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
      component: database
  template:
    metadata:
      labels:
        app: mongo
        component: database
    spec:
      containers:
        - name: mongo
          image: mongo:7.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
          readinessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: 27017
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "300m"
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-db
  labels:
    app: mongo
    component: database
spec:
  selector:
    app: mongo
    component: database
  ports:
    - port: 27017
      targetPort: 27017