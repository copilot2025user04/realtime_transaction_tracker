apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
        - name: zookeeper
          image: confluentinc/cp-zookeeper:7.5.0
          env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper
spec:
  selector:
    app: zookeeper
  ports:
    - port: 2181
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: confluentinc/cp-kafka:7.5.0
          ports:
            - containerPort: 9092
          env:
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper:2181
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://kafka:9092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
          volumeMounts:
            - mountPath: /var/lib/kafka/data
              name: kafka-data
      volumes:
        - name: kafka-data
          persistentVolumeClaim:
            claimName: kafka-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  selector:
    app: kafka
  ports:
    - name: kafka
      port: 9092
      targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:7.0
          ports:
            - containerPort: 27017
          volumeMounts:
            - mountPath: /data/db
              name: mongo-data
      volumes:
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-db
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: setup-script
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: setup-script
#  template:
#    metadata:
#      labels:
#        app: setup-script
#    spec:
#      containers:
#        - name: setup
#          image: bikashhasmobile/setup-script:1.0
#      restartPolicy: Never
#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: realtime-transaction-tracker
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: realtime-transaction-tracker
#  template:
#    metadata:
#      labels:
#        app: realtime-transaction-tracker
#    spec:
#      containers:
#        - name: tracker
#          image: bikashhasmobile/realtime-transaction-tracker:3
#          ports:
#            - containerPort: 8080
#          env:
#            - name: SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS
#              value: kafka:9092
#            - name: SPRING_DATA_MONGODB_URI
#              value: mongodb://mongo-db:27017/mybank
#---
#apiVersion: v1
#kind: Service
#metadata:
#  name: realtime-tracker
#spec:
#  selector:
#    app: realtime-transaction-tracker
#  ports:
#    - port: 8080
#      targetPort: 8080
#      nodePort: 30084
#  type: NodePort
